name: Release

on:
  release:
    types: [ created, published ]

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    strategy:
      matrix:
        # build and publish in parallel: linux/386, linux/amd64, linux/arm64, windows/386, windows/amd64, darwin/amd64, darwin/arm64
        goos: [ linux, windows, darwin ]
        goarch: [ "386", amd64, arm64 ]
        exclude:
          - goarch: "386"
            goos: darwin
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Get Version
        id: get_version
        run: echo ::set-output name=VERSION::$(git describe --tags --abbrev=0)

      - name: Get Commit
        id: get_commit
        run: echo ::set-output name=COMMIT::$(git rev-parse --short HEAD)

      - name: Build
        uses: wangyoucao577/go-release-action@v1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          goos: ${{ matrix.goos }}
          goarch: ${{ matrix.goarch }}
          goversion: "1.20.2"
          project_path: "."
          binary_name: "cdns"
          build_flags: -v -trimpath
          ldflags: -X 'github.com/yaotthaha/cdns/constant.Version=${{ steps.get_version.outputs.VERSION }}' -X 'github.com/yaotthaha/cdns/constant.Commit=${{ steps.get_commit.outputs.COMMIT }}' -s -w -buildid=
          extra_files: LICENSE README.md
          sha256sum: TRUE
          overwrite: TRUE
          compress_assets: auto
